React JS
-------------------------------------------------------
Introduction
-------------------------------------------------------
it is open source js library,developed by facebook in may 2013
it is very good for creating SPA appliation, that displays data as it changes, without reloading the page.
-------------------------------------------------------
How react works 
-------------------------------------------------------
1)In react js , every section of web page is component
2)place all the child components in app.js 
3)To tell app.js as default component to react js add root value to the index.js
4)In index.html file we have id property with value root 
5)JSX =>javascript xml ,allows to write html code in javscript file
-------------------------------------------------------
in javascript : <h1 id ="root"></h1> =>   document.getElementById('root').innerHTML='Hello World'
in JSX        :const element=<h1>{name}</h1>;ReactDOM.render(element,document.getElementById('root'));
-------------------------------------------------------

Each section of web page is component and can be resuable, can be merged as single component
-------------------------------------------------------

npx create-react-app my-app
-------------------------------------------------------
sample code
-------------------------------------------------------
const root = ReactDOM.createRoot(document.getElementById('root'));
root.render(
  <React.StrictMode>
    <App />
  </React.StrictMode>
);


3 folder and 4 files in react app
-------------------------------------------------------
Components 
-------------------------------------------------------
  Every section is web page  is components , it can be reusable and merged has SPA
there are two types of 
1) class components(statefull): we can impl states and life cycle of component in function components
   import react and component from react lib
   extends class with react.component
   use render method return html content

   
 2) functional components(stateless) => we cannot impl states and life cycle of component in function components
    use function Declaration and return html content 
	
-------------------------------------------------------
nested compoent we can add  chid component to parent component 
state is used to intialize variable and setState is used for change variable value in class component
props:communication between parent to child
Render Prop : ?
-------------------------------------------------------
lifecycle :componentDidMount(), componentWillMount => it can be used only in class component

function component:to achieve stateful behaviour we can use react hooks  to impl state and life cycle methods

from 16.8 =>react hooks :
 useState() => it is like this.setState() in class component ;
 useEffect() =>it is like componentDidMount in class component
 
 import React, { Component,useState,useEffect } from "react";
-------------------------------------------------------
use maps to return the html content, or object 
